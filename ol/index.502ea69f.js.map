{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/ol/Disposable.js","./node_modules/ol/array.js","./node_modules/ol/functions.js","./node_modules/ol/util.js","./node_modules/ol/AssertionError.js","./node_modules/ol/asserts.js","./node_modules/ol/transform.js","./node_modules/ol/extent/Corner.js","./node_modules/ol/extent/Relationship.js","./node_modules/ol/extent.js","./node_modules/ol/math.js","./node_modules/ol/color.js","./node_modules/ol/style/IconImageCache.js","./node_modules/ol/events/Event.js","./node_modules/ol/ObjectEventType.js","./node_modules/ol/obj.js","./node_modules/ol/events/Target.js","./node_modules/ol/events/EventType.js","./node_modules/ol/events.js","./node_modules/ol/Observable.js","./node_modules/ol/Object.js","./node_modules/ol/layer/Property.js","./node_modules/ol/layer/Base.js","./node_modules/ol/render/EventType.js","./node_modules/ol/source/State.js","./node_modules/ol/layer/Layer.js","./node_modules/ol/coordinate.js","./node_modules/ol/renderer/Map.js","./node_modules/ol/render/Event.js","./node_modules/ol/css.js","./node_modules/ol/has.js","./node_modules/ol/dom.js","./node_modules/ol/render/canvas.js","./node_modules/ol/renderer/Composite.js","./node_modules/ol/CollectionEventType.js","./node_modules/ol/Collection.js","./node_modules/ol/layer/Group.js","./node_modules/ol/MapEvent.js","./node_modules/ol/MapBrowserEvent.js","./node_modules/ol/MapBrowserEventType.js","./node_modules/ol/pointer/EventType.js","./node_modules/ol/MapBrowserEventHandler.js","./node_modules/ol/MapEventType.js","./node_modules/ol/MapProperty.js","./node_modules/ol/structs/PriorityQueue.js","./node_modules/ol/TileState.js","./node_modules/ol/TileQueue.js","./node_modules/ol/geom/GeometryType.js","./node_modules/ol/proj/Units.js","./node_modules/ol/ViewHint.js","./node_modules/ol/ViewProperty.js","./node_modules/ol/tilegrid/common.js","./node_modules/ol/proj/Projection.js","./node_modules/ol/proj/epsg3857.js","./node_modules/ol/proj/epsg4326.js","./node_modules/ol/proj/projections.js","./node_modules/ol/proj/transforms.js","./node_modules/ol/sphere.js","./node_modules/ol/proj.js","./node_modules/ol/centerconstraint.js","./node_modules/ol/resolutionconstraint.js","./node_modules/ol/rotationconstraint.js","./node_modules/ol/easing.js","./node_modules/ol/geom/GeometryLayout.js","./node_modules/ol/geom/flat/transform.js","./node_modules/ol/geom/Geometry.js","./node_modules/ol/geom/SimpleGeometry.js","./node_modules/ol/geom/flat/closest.js","./node_modules/ol/geom/flat/deflate.js","./node_modules/ol/geom/flat/simplify.js","./node_modules/ol/geom/flat/inflate.js","./node_modules/ol/geom/flat/area.js","./node_modules/ol/geom/LinearRing.js","./node_modules/ol/geom/Point.js","./node_modules/ol/geom/flat/contains.js","./node_modules/ol/geom/flat/intersectsextent.js","./node_modules/ol/geom/flat/segments.js","./node_modules/ol/geom/flat/reverse.js","./node_modules/ol/geom/flat/orient.js","./node_modules/ol/geom/Polygon.js","./node_modules/ol/geom/flat/interiorpoint.js","./node_modules/ol/View.js","./node_modules/ol/size.js","./node_modules/ol/PluggableMap.js","./node_modules/ol/control/Control.js","./node_modules/ol/control/Attribution.js","./node_modules/ol/control/Rotate.js","./node_modules/ol/control/Zoom.js","./node_modules/ol/interaction/Property.js","./node_modules/ol/interaction/Interaction.js","./node_modules/ol/interaction/DoubleClickZoom.js","./node_modules/ol/interaction/Pointer.js","./node_modules/ol/events/condition.js","./node_modules/ol/interaction/DragPan.js","./node_modules/ol/interaction/DragRotate.js","./node_modules/ol/render/Box.js","./node_modules/ol/interaction/DragBox.js","./node_modules/ol/interaction/DragZoom.js","./node_modules/ol/events/KeyCode.js","./node_modules/ol/interaction/KeyboardPan.js","./node_modules/ol/interaction/KeyboardZoom.js","./node_modules/ol/Kinetic.js","./node_modules/ol/interaction/MouseWheelZoom.js","./node_modules/ol/interaction/PinchRotate.js","./node_modules/ol/interaction/PinchZoom.js","./node_modules/ol/Map.js","./node_modules/ol/control.js","./node_modules/ol/interaction.js","./node_modules/ol/Tile.js","./node_modules/ol/ImageBase.js","./node_modules/ol/ImageState.js","./node_modules/ol/Image.js","./node_modules/ol/ImageTile.js","./node_modules/ol/reproj.js","./node_modules/ol/reproj/Triangulation.js","./node_modules/ol/source/common.js","./node_modules/ol/reproj/Tile.js","./node_modules/ol/reproj/common.js","./node_modules/ol/structs/LRUCache.js","./node_modules/ol/tilecoord.js","./node_modules/ol/TileCache.js","./node_modules/ol/source/TileEventType.js","./node_modules/ol/source/Source.js","./node_modules/ol/TileRange.js","./node_modules/ol/tilegrid/TileGrid.js","./node_modules/ol/tilegrid.js","./node_modules/ol/source/Tile.js","./node_modules/ol/tileurlfunction.js","./node_modules/ol/source/UrlTile.js","./node_modules/ol/source/TileImage.js","./node_modules/ol/source/XYZ.js","./node_modules/ol/source/OSM.js","./node_modules/ol/layer/TileProperty.js","./node_modules/ol/layer/BaseTile.js","./node_modules/ol/renderer/Layer.js","./node_modules/ol/renderer/canvas/Layer.js","./node_modules/ol/renderer/canvas/TileLayer.js","./node_modules/ol/layer/Tile.js","./main.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        _this.key = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var tileRange = tileGrid.getFullTileRange(z);\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                if (extent) {\n                    var restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n                    tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n                    tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n                    tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n                    tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n                }\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return this.extent_\n                ? this.getTileRangeForExtentAndZ(this.extent_, z)\n                : null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        assert(equivalent(this.getProjection(), projection), 68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n        );\n        return this.tileCache;\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction;\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n            ? this.tileUrlFunction.bind(this)\n            : this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined\n            ? options.url\n            : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            attributionsCollapsible: false,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX,\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport OSM from 'ol/source/OSM';\n\nimport TileLayer from 'ol/layer/Tile';\nimport View from 'ol/View';\n\n\nvar map1 = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    })],\n  target: 'map1',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: [1076233.358255, 6878109.553213],\n    zoom: 4,\n  }),\n});\nvar map2 = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    })],\n  target: 'map2',\n  view: new View({\n    projection: 'EPSG:3857',\n    center: [1917652.165619, 6036690.745850],\n    zoom: 9,\n  }),\n});\n"],"names":["$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$f7bbc97715b7cef936b659025f276afb$export$default","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$numberSafeCompareFunction","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$linearFindNearest","arr","target","direction","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$extend","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$equals","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$TRUE","$8ff7925ef9afa7e69604ab9620edac22$export$FALSE","$8ff7925ef9afa7e69604ab9620edac22$export$VOID","$cd365e7aabd14aaf6df378f6a61e84d7$export$abstract","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$getUid","obj","ol_uid","String","extendStatics","$cd365e7aabd14aaf6df378f6a61e84d7$export$VERSION","$fd652548d0f540d94aaff6aa830746d2$var$__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","$fd652548d0f540d94aaff6aa830746d2$export$default","_super","AssertionError","code","_this","message","split","name","$2ce41f61858dd350a0b2670bdab4e597$export$assert","assertion","errorCode","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$apply","transform","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$makeInverse","source","mat","det","c","f","$af95442a94d1862a138c401177ef0c4b$export$toString","join","$8ebfb36ef5532881c5652b708da2c120$export$boundingExtent","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$createEmpty","ii","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$closestSquaredDistanceXY","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$containsCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$containsXY","$8ebfb36ef5532881c5652b708da2c120$export$coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdate","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateEmpty","$8ebfb36ef5532881c5652b708da2c120$export$equals","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$extendFlatCoordinates","flatCoordinates","offset","end","stride","$8ebfb36ef5532881c5652b708da2c120$export$extendXY","min","max","$8ebfb36ef5532881c5652b708da2c120$export$forEachCorner","callback","val","$8ebfb36ef5532881c5652b708da2c120$export$getBottomLeft","$8ebfb36ef5532881c5652b708da2c120$export$getBottomRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopRight","$8ebfb36ef5532881c5652b708da2c120$export$getTopLeft","$8ebfb36ef5532881c5652b708da2c120$export$getArea","area","$8ebfb36ef5532881c5652b708da2c120$export$isEmpty","$8ebfb36ef5532881c5652b708da2c120$export$getWidth","$8ebfb36ef5532881c5652b708da2c120$export$getHeight","$8ebfb36ef5532881c5652b708da2c120$export$getCenter","$8ebfb36ef5532881c5652b708da2c120$export$getCorner","corner","$8ebfb36ef5532881c5652b708da2c120$export$getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$getIntersection","intersection","$8ebfb36ef5532881c5652b708da2c120$export$intersects","$8ebfb36ef5532881c5652b708da2c120$export$applyTransform","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$clamp","value","$916dab65013919ad0345478f9a9f4e0f$export$cosh","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$log2","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$squaredSegmentDistance","t","$916dab65013919ad0345478f9a9f4e0f$export$squaredDistance","$916dab65013919ad0345478f9a9f4e0f$export$toRadians","angleInDegrees","PI","$916dab65013919ad0345478f9a9f4e0f$export$modulo","r","$916dab65013919ad0345478f9a9f4e0f$export$lerp","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$asString","color","g","undefined","$ddc7f5de3664aab559d1c545c366e59d$export$toString","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$normalize","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$export$shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","set","setSize","maxCacheSize","$003acff01e79c0a73122c747343d2e59$export$default","BaseEvent","type","propagationStopped","preventDefault","stopPropagation","$e1ac967f910869e98e549bfd20a1853c$export$assign","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$clear","object","property","$e1ac967f910869e98e549bfd20a1853c$export$getValues","values","$99fe3f3343ef18166bd431edc467d890$var$__extends","__extends","$99fe3f3343ef18166bd431edc467d890$export$default","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","keys","index","splice","$7961378a294a4943979a10a4df4a3fcf$export$listen","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$listenOnce","$7961378a294a4943979a10a4df4a3fcf$export$unlistenByKey","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","$02e80757fefec0a9636ae28d17c9fab2$export$default","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","$02e80757fefec0a9636ae28d17c9fab2$export$unByKey","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$export$ObjectEvent","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$export$default","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$getChangeEventType","opt_silent","applyProperties","unset","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$3a8294651627eb74246351f5b596cf68$var$__extends","$3a8294651627eb74246351f5b596cf68$export$default","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","$1935b85c22cfc539ea58e141ab0b37d6$export$default","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","layerState","some","arrayLayerState","$c81aa09fb137106970dbc142b1e89ec3$export$default","createRenderer","hasRenderer","$1935b85c22cfc539ea58e141ab0b37d6$export$inView","viewState","zoom","$29884e9b826cd25109649ab0c360e769$export$equals","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$rotate","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$wrapX","projection","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$29884e9b826cd25109649ab0c360e769$export$getWorldsAway","$52488a0195cf0e38344877f5a3896831$var$__extends","$52488a0195cf0e38344877f5a3896831$export$default","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","slice","offsets","layerStates","numLayers","matches","tmpCoord","j","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$default","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_HIDDEN","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_CONTROL","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_COLLAPSED","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$getFontParameters","fontSpec","match","style","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$FIREFOX","$2016f251f21b02e27a5ca36c37510540$export$WEBKIT","$2016f251f21b02e27a5ca36c37510540$export$MAC","$2016f251f21b02e27a5ca36c37510540$export$DEVICE_PIXEL_RATIO","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$IMAGE_DECODE","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$PASSIVE_EVENT_LISTENERS","passive","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$replaceNode","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$removeNode","node","removeChild","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$checkedFonts","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$labelCache","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$textHeights","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextWidth","check","done","fonts","font","clearInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$rotateAtOffset","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$2ae21f590be041e7827bf48426c0766a$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$default","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","event_1","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","appendChild","display","getDataAtPixel","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$CollectionEvent","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$export$default","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$default","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$default","MapEvent","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$default","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$default","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$eeb9190850355aed8fc5d92349a26bc6$export$DROP","$eeb9190850355aed8fc5d92349a26bc6$export$default","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6bfe069e85349c527971d875462feeac$var$__extends","$6bfe069e85349c527971d875462feeac$export$default","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","hifi","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$df0b68b08946bf3d8de6eeca4fba3a5f$export$default","$df0b68b08946bf3d8de6eeca4fba3a5f$export$METERS_PER_UNIT","$c1e1f889297e115e83bec772196e32bf$export$DEFAULT_TILE_SIZE","$1514cc7c23ad291d61b727f0ef5e4246$export$default","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$RADIUS","$7d5079714e2786ec6bee07910f0d8a86$export$HALF_SIZE","$7d5079714e2786ec6bee07910f0d8a86$export$EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$WORLD_EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$MAX_SAFE_Y","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$export$PROJECTIONS","$7d5079714e2786ec6bee07910f0d8a86$export$fromEPSG4326","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$toEPSG4326","atan","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$EXTENT","$655738a66489cc3574c072262645bff6$export$METERS_PER_UNIT","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$export$PROJECTIONS","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$add","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$DEFAULT_RADIUS","$525020a649871896a05d6fe288616b91$export$getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$524e9c84a4c58bd58490804da4c772c6$export$cloneTransform","$524e9c84a4c58bd58490804da4c772c6$export$identityTransform","$524e9c84a4c58bd58490804da4c772c6$export$addProjection","$524e9c84a4c58bd58490804da4c772c6$export$get","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$getPointResolution","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$getTransformFromProjections","vertices","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentProjections","projections","$524e9c84a4c58bd58490804da4c772c6$export$addProjections","$524e9c84a4c58bd58490804da4c772c6$export$createProjection","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$getTransform","$524e9c84a4c58bd58490804da4c772c6$export$transform","$524e9c84a4c58bd58490804da4c772c6$export$transformExtent","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserCoordinate","$524e9c84a4c58bd58490804da4c772c6$export$fromUserCoordinate","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$fromUserExtent","$61ba71c2b15c8b7e6577526180db0da5$export$createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$none","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$disable","$4c6a822b604dbfa9a10722399f7335d0$export$none","$8717569d70d85bd7f28c8c1b2c37daee$export$easeIn","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$easeOut","$8717569d70d85bd7f28c8c1b2c37daee$export$inAndOut","$8717569d70d85bd7f28c8c1b2c37daee$export$linear","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentTransforms","$3f4f29b0a4be88d8241f933ff6121a33$export$transform2D","opt_dest","dest","$a17c336463d573a615343832f6e09aa8$var$__extends","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$default","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","$57ce72c0539154dec2abdc81ffcff6df$export$default","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","anchorX","anchorY","k","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$maxSquaredDelta","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinates","$a357f0a07bdcadd773e93ca791a42f7b$export$douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$snap","$a357f0a07bdcadd773e93ca791a42f7b$export$quantize","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinates","opt_coordinates","$7641779008ab07f3e708dabdbbb046eb$export$linearRing","twiceArea","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$default","LinearRing","maxDelta_","maxDeltaRevision_","getArea","$acd1b863667085614d305475fd6c1d27$var$__extends","$acd1b863667085614d305475fd6c1d27$export$default","Point","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsExtent","outside","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsXY","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingsContainsXY","ends","$32ab876027ca0904f46063bee68b73aa$export$intersectsLineString","coordinatesExtent","ret","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRingArray","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRing","$221ffa684d4ba252080508824e602b78$export$coordinates","tmp","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingIsClockwise","edge","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRings","opt_right","right","isClockwise","$bffbcd35af658c4477627697774de1c2$var$__extends","$bffbcd35af658c4477627697774de1c2$export$default","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","opt_coordinatess","coordinatess","jj","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","$bffbcd35af658c4477627697774de1c2$export$fromExtent","XY","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","$19fadbefe1b7e34cc76223b5c3e441cc$export$default","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","$19fadbefe1b7e34cc76223b5c3e441cc$export$createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getCenter","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","CIRCLE","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","CENTER","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","$8556eff40cf4f1624cd78ff7ea054c5b$export$toSize","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","$b198bbb8a7fca092de94dd3a772c1343$export$default","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","INTERACTING","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","parseInt","$8316c877d328ebfc4f4b917229eec057$var$__extends","$8316c877d328ebfc4f4b917229eec057$export$default","Control","target_","listenerKeys","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","$194d017bd833b991c2c712fa2ff5b0e5$export$default","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$aef56543978371a8090d728a4f107ac0$var$__extends","$aef56543978371a8090d728a4f107ac0$export$default","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$9812beea87bdcda9027d52b89085c87c$var$__extends","$9812beea87bdcda9027d52b89085c87c$export$default","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$1ad0cf5090e3852174414bfc8cc27b9e$export$default","Interaction","setActive","active","$1ad0cf5090e3852174414bfc8cc27b9e$export$pan","$1ad0cf5090e3852174414bfc8cc27b9e$export$zoomByDelta","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","$4eeedd039b7e6d5b8277b175715f9541$export$default","DoubleClickZoom","delta_","stopEvent","shiftKey","$0714aed143b912743afff175db44c1dc$var$__extends","$0714aed143b912743afff175db44c1dc$export$default","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$0714aed143b912743afff175db44c1dc$export$centroid","$054715504eaffdc825d0a6ada99ec596$export$all","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$altShiftKeysOnly","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$focusWithTabindex","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$focus","$054715504eaffdc825d0a6ada99ec596$export$always","$054715504eaffdc825d0a6ada99ec596$export$mouseActionButton","$054715504eaffdc825d0a6ada99ec596$export$noModifierKeys","$054715504eaffdc825d0a6ada99ec596$export$shiftKeyOnly","$054715504eaffdc825d0a6ada99ec596$export$targetNotEditable","tagName","$054715504eaffdc825d0a6ada99ec596$export$mouseOnly","pointerType","$054715504eaffdc825d0a6ada99ec596$export$primaryAction","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","$959ec1b544453a9fa4f0e9221c3bb0b0$export$default","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$var$__extends","$719e5208cd50905e41bacbcae2219883$export$default","DragRotate","lastAngle_","$d0055a036577a61fd8306330947568c7$var$__extends","$d0055a036577a61fd8306330947568c7$export$default","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$DragBoxEvent","DragBoxEvent","$275b26378704892d776581791f32dc0e$export$default","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","$b5cd6c68e27395a36aa4c8d3c5395250$export$default","DragZoom","out_","out","mapExtent","boxPixelExtent","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$default","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","UP","mapUnitsDelta","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","$55ea853e77e2fe25fa1a8793cb31a3bf$export$default","KeyboardZoom","KEYPRESS","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$default","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","$f7a99b9e7b1a72242a3eb408b28d3563$export$Mode","$f7a99b9e7b1a72242a3eb408b28d3563$export$default","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$default","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$var$__extends","$601b81cfcc535d77832cc96f04e942a1$export$default","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","$976448907138da16f7612e32ecc55ac7$var$__extends","$976448907138da16f7612e32ecc55ac7$export$default","Map","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$6ea2e09c0ee686e4fcf344e90f929221$var$__extends","$6ea2e09c0ee686e4fcf344e90f929221$export$default","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","LOADED","getTileCoord","setState","getAlpha","inTransition","endTransition","$e65a38a3837120ad833711b5930f5912$var$__extends","$e65a38a3837120ad833711b5930f5912$export$default","ImageBase","getImage","getPixelRatio","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","$2fc4e1887f4ffa14e16ea647fd21482c$export$listenImage","setImage","image","loadHandler","errorHandler","img","promise","listening_1","then","catch","$69031f3b45b1bb2d223c45e6bbe47b36$var$__extends","$69031f3b45b1bb2d223c45e6bbe47b36$export$default","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$default","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetCoverageX","targetQuadExtent","isFinite","isNotFinite","centerSrc","centerSrcEstimX","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$dffde8f1acde674bc74a24601c2788a7$export$IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","restore","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$render","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","augmentedMatrix","getImageData","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$97e37be8733b1927a1ed959b854a8d18$var$__extends","$97e37be8733b1927a1ed959b854a8d18$export$default","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","IDLE","leftToLoad_1","LOADING","sourceListenKey_1","unlistenSources_","$101ae72fedfe330e8897d118e958a8b6$export$default","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$c98d704946f2a3a0e1335bd43bccb465$export$createOrUpdate","opt_tileCoord","$c98d704946f2a3a0e1335bd43bccb465$export$getKeyZXY","$c98d704946f2a3a0e1335bd43bccb465$export$getKey","$8328c42c04c9adada69111ec662476d9$var$__extends","$8328c42c04c9adada69111ec662476d9$export$default","TileCache","expireCache","pruneExceptNewestZ","Number","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","$6a9611a0560ac769e67fadc6cfef9a2c$export$default","Source","attributions_","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","getContextOptions","refresh","setAttributions","attributionLike","$6a958d3d10a45fbc13d601def6cb4731$export$default","TileRange","containsTileRange","tileRange","getHeight","getWidth","$6a958d3d10a45fbc13d601def6cb4731$export$createOrUpdate","$0f9feaa19e1db86e91525f400c1bbfa1$var$tmpTileCoord","$0f9feaa19e1db86e91525f400c1bbfa1$export$default","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$0b7f50deff6bfc90c8b239d5ceca7010$export$getForProjection","opt_maxZoom","opt_tileSize","opt_corner","$0b7f50deff6bfc90c8b239d5ceca7010$var$resolutionsFromExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForExtent","$0b7f50deff6bfc90c8b239d5ceca7010$export$extentFromProjection","$0b7f50deff6bfc90c8b239d5ceca7010$export$createForProjection","opt_maxResolution","half","$cde35ab3df9629f8ffd26ea2f187b41e$var$__extends","$cde35ab3df9629f8ffd26ea2f187b41e$export$default","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","updateCacheSize","tileCount","useTile","$cde35ab3df9629f8ffd26ea2f187b41e$export$TileSourceEvent","TileSourceEvent","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTemplates","templates","tileUrlFunctions","$f3b33fdefe65058178a4b532c7b3f14b$export$createFromTileUrlFunctions","$671acdd0ca89710db49a7e8e41335e8e$var$__extends","$671acdd0ca89710db49a7e8e41335e8e$export$default","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","ERROR","setTileLoadFunction","setTileUrlFunction","exec","startCharCode","stopCharCode","fromCharCode","stop_1","$f1c529d0542d6a8d6fa77a64fa516101$var$__extends","$f1c529d0542d6a8d6fa77a64fa516101$export$default","TileImage","$f1c529d0542d6a8d6fa77a64fa516101$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","JSON","stringify","thisProj","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","$fd3ab3577c0c67d5f04f77f7494fe563$var$__extends","$fd3ab3577c0c67d5f04f77f7494fe563$export$default","XYZ","xyzOptions","gridOptions","$ff8235042efbfb69f46b35131190fa2b$var$__extends","$ff8235042efbfb69f46b35131190fa2b$export$default","OSM","$ab70eb0a0a56b112261264db1ea7acab$var$__extends","$ab70eb0a0a56b112261264db1ea7acab$export$default","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","$ae15ed96a99c1303ea67938747c94fca$var$__extends","$ae15ed96a99c1303ea67938747c94fca$export$default","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","imageState","$ac230d10056414a40eb774bd091234f1$var$__extends","$ac230d10056414a40eb774bd091234f1$export$default","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","newCanvas","newContext","clearRect","err","Uint8Array","$21101e8f6691f861098a74ca233ba3e1$var$__extends","$21101e8f6691f861098a74ca233ba3e1$export$default","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","i_1","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alpha","alphaChanged","globalAlpha","postRenderFunction","opt_tileCallback","$7f639b92eb9591e7aded56644548f656$var$__extends","$7f639b92eb9591e7aded56644548f656$export$default","TileLayer","$fa8fdebac07669d2ee57fbf926837b94$var$map1","$fa8fdebac07669d2ee57fbf926837b94$var$map2"],"version":3,"file":"index.502ea69f.js.map"}