{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/ol/Disposable.js","./node_modules/ol/array.js","./node_modules/ol/functions.js","./node_modules/ol/util.js","./node_modules/ol/AssertionError.js","./node_modules/ol/asserts.js","./node_modules/ol/transform.js","./node_modules/ol/extent/Relationship.js","./node_modules/ol/extent.js","./node_modules/ol/math.js","./node_modules/ol/color.js","./node_modules/ol/style/IconImageCache.js","./node_modules/ol/events/Event.js","./node_modules/ol/ObjectEventType.js","./node_modules/ol/obj.js","./node_modules/ol/events/Target.js","./node_modules/ol/events/EventType.js","./node_modules/ol/events.js","./node_modules/ol/Observable.js","./node_modules/ol/Object.js","./node_modules/ol/layer/Property.js","./node_modules/ol/layer/Base.js","./node_modules/ol/render/EventType.js","./node_modules/ol/source/State.js","./node_modules/ol/layer/Layer.js","./node_modules/ol/coordinate.js","./node_modules/ol/renderer/Map.js","./node_modules/ol/render/Event.js","./node_modules/ol/css.js","./node_modules/ol/has.js","./node_modules/ol/dom.js","./node_modules/ol/render/canvas.js","./node_modules/ol/renderer/Composite.js","./node_modules/ol/CollectionEventType.js","./node_modules/ol/Collection.js","./node_modules/ol/layer/Group.js","./node_modules/ol/MapEvent.js","./node_modules/ol/MapBrowserEvent.js","./node_modules/ol/MapBrowserEventType.js","./node_modules/ol/pointer/EventType.js","./node_modules/ol/MapBrowserEventHandler.js","./node_modules/ol/MapEventType.js","./node_modules/ol/MapProperty.js","./node_modules/ol/structs/PriorityQueue.js","./node_modules/ol/TileState.js","./node_modules/ol/TileQueue.js","./node_modules/ol/geom/GeometryType.js","./node_modules/ol/proj/Units.js","./node_modules/ol/ViewHint.js","./node_modules/ol/ViewProperty.js","./node_modules/ol/proj/Projection.js","./node_modules/ol/proj/epsg3857.js","./node_modules/ol/proj/epsg4326.js","./node_modules/ol/proj/projections.js","./node_modules/ol/proj/transforms.js","./node_modules/ol/sphere.js","./node_modules/ol/proj.js","./node_modules/ol/centerconstraint.js","./node_modules/ol/resolutionconstraint.js","./node_modules/ol/rotationconstraint.js","./node_modules/ol/easing.js","./node_modules/ol/geom/GeometryLayout.js","./node_modules/ol/geom/flat/transform.js","./node_modules/ol/geom/Geometry.js","./node_modules/ol/geom/SimpleGeometry.js","./node_modules/ol/geom/flat/closest.js","./node_modules/ol/geom/flat/deflate.js","./node_modules/ol/geom/flat/simplify.js","./node_modules/ol/geom/flat/inflate.js","./node_modules/ol/geom/flat/area.js","./node_modules/ol/geom/LinearRing.js","./node_modules/ol/geom/Point.js","./node_modules/ol/geom/flat/contains.js","./node_modules/ol/geom/flat/intersectsextent.js","./node_modules/ol/geom/flat/segments.js","./node_modules/ol/geom/flat/reverse.js","./node_modules/ol/geom/flat/orient.js","./node_modules/ol/geom/Polygon.js","./node_modules/ol/geom/flat/interiorpoint.js","./node_modules/ol/View.js","./node_modules/ol/tilegrid/common.js","./node_modules/ol/PluggableMap.js","./node_modules/ol/size.js","./node_modules/ol/control/Control.js","./node_modules/ol/control/Attribution.js","./node_modules/ol/control/Rotate.js","./node_modules/ol/control/Zoom.js","./node_modules/ol/control.js","./node_modules/ol/interaction/Property.js","./node_modules/ol/interaction/Interaction.js","./node_modules/ol/interaction/DoubleClickZoom.js","./node_modules/ol/interaction/Pointer.js","./node_modules/ol/events/condition.js","./node_modules/ol/interaction/DragPan.js","./node_modules/ol/interaction/DragRotate.js","./node_modules/ol/render/Box.js","./node_modules/ol/interaction/DragBox.js","./node_modules/ol/interaction/DragZoom.js","./node_modules/ol/events/KeyCode.js","./node_modules/ol/interaction/KeyboardPan.js","./node_modules/ol/interaction/KeyboardZoom.js","./node_modules/ol/Kinetic.js","./node_modules/ol/interaction/MouseWheelZoom.js","./node_modules/ol/interaction/PinchRotate.js","./node_modules/ol/interaction/PinchZoom.js","./node_modules/ol/Map.js","./node_modules/ol/interaction.js","./node_modules/ol/source/common.js","./node_modules/ol/ImageState.js","./node_modules/ol/ImageBase.js","./node_modules/ol/reproj.js","./node_modules/ol/reproj/Triangulation.js","./node_modules/ol/reproj/Image.js","./node_modules/ol/reproj/common.js","./node_modules/ol/source/Source.js","./node_modules/ol/source/Image.js","./node_modules/ol/Image.js","./node_modules/ol/source/WMSServerType.js","./node_modules/ol/uri.js","./node_modules/ol/source/ImageWMS.js","./node_modules/ol/string.js","./node_modules/ol/layer/BaseImage.js","./node_modules/ol/renderer/Layer.js","./node_modules/ol/renderer/canvas/Layer.js","./node_modules/ol/renderer/canvas/ImageLayer.js","./node_modules/ol/layer/Image.js","./main.js"],"sourcesContent":["var $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    /**\n     * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n     * @api\n     */\n    CARMENTA_SERVER: 'carmentaserver',\n    /**\n     * HiDPI support for [GeoServer](https://geoserver.org/)\n     * @api\n     */\n    GEOSERVER: 'geoserver',\n    /**\n     * HiDPI support for [MapServer](https://mapserver.org/)\n     * @api\n     */\n    MAPSERVER: 'mapserver',\n    /**\n     * HiDPI support for [QGIS](https://qgis.org/)\n     * @api\n     */\n    QGIS: 'qgis',\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { appendParams } from '../uri.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { compareVersions } from '../string.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth, } from '../extent.js';\nimport { get as getProjection, transform } from '../proj.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            imageSmoothing: options.imageSmoothing,\n            projection: options.projection,\n            resolutions: options.resolutions,\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ =\n            options.imageLoadFunction !== undefined\n                ? options.imageLoadFunction\n                : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS'],\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png',\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection()\n                ? this.getProjection().getMetersPerUnit()\n                : 1;\n            var pixelSize = 0.00028;\n            baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.url_), baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [\n            viewWidth,\n            viewHeight,\n        ]);\n        var requestWidth = Math.ceil((this.ratio_ * getWidth(extent)) / imageResolution);\n        var requestHeight = Math.ceil((this.ratio_ * getHeight(extent)) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [\n            requestWidth,\n            requestHeight,\n        ]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width\n        ? numberString\n        : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport {Attribution} from 'ol/control';\n\nimport ImageWMS from 'ol/source/ImageWMS';\nimport {Image as ImageLayer} from 'ol/layer';\n\nimport View from 'ol/View';\n\n\nvar orka = new ImageLayer({\n  source: new ImageWMS({\n    url: 'https://www.orka-mv.de/geodienste/orkamv/wms',\n    params: {'LAYERS': 'orkamv'},\n    ratio: 1,\n    attributions: 'Kartenbild © Hanse- und Universitätsstadt Rostock (CC BY 4.0) | Kartendaten © OpenStreetMap (ODbL) und LkKfS-MV.'\n  })\n});\n\nvar attributionOrka = new Attribution({\n  collapsed: false,\n  collapsible: false,\n  className: \"ol-attribution\"\n});\n\n\nvar map1 = new Map({\n  layers: [orka],\n  target: 'map1',\n  controls: [attributionOrka],\n  view: new View({\n    projection: 'EPSG:3857',\n    center: [1344842.630278, 7203721.739080],\n    zoom: 16,\n    constrainResolution: true\n  }),\n});\n\n"],"names":["$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$f7bbc97715b7cef936b659025f276afb$export$default","Disposable","this","disposed","prototype","dispose","disposeInternal","$7c21d7646a0313abf7b847efa68bfceb$export$numberSafeCompareFunction","a","b","$7c21d7646a0313abf7b847efa68bfceb$export$linearFindNearest","arr","target","direction","length","i","$7c21d7646a0313abf7b847efa68bfceb$export$extend","data","extension","Array","isArray","$7c21d7646a0313abf7b847efa68bfceb$export$equals","arr1","arr2","len1","$8ff7925ef9afa7e69604ab9620edac22$export$TRUE","$8ff7925ef9afa7e69604ab9620edac22$export$FALSE","$8ff7925ef9afa7e69604ab9620edac22$export$VOID","$cd365e7aabd14aaf6df378f6a61e84d7$export$abstract","Error","$cd365e7aabd14aaf6df378f6a61e84d7$var$uidCounter_","$cd365e7aabd14aaf6df378f6a61e84d7$export$getUid","obj","ol_uid","String","extendStatics","$cd365e7aabd14aaf6df378f6a61e84d7$export$VERSION","$fd652548d0f540d94aaff6aa830746d2$var$__extends","d","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","$fd652548d0f540d94aaff6aa830746d2$export$default","_super","AssertionError","code","_this","message","split","name","$2ce41f61858dd350a0b2670bdab4e597$export$assert","assertion","errorCode","$af95442a94d1862a138c401177ef0c4b$var$tmp_","$af95442a94d1862a138c401177ef0c4b$export$apply","transform","coordinate","x","y","$af95442a94d1862a138c401177ef0c4b$export$compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$af95442a94d1862a138c401177ef0c4b$export$makeInverse","source","mat","det","c","f","$af95442a94d1862a138c401177ef0c4b$export$toString","join","$8ebfb36ef5532881c5652b708da2c120$export$boundingExtent","coordinates","extent","$8ebfb36ef5532881c5652b708da2c120$export$createEmpty","ii","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$closestSquaredDistanceXY","dx","dy","$8ebfb36ef5532881c5652b708da2c120$export$containsCoordinate","$8ebfb36ef5532881c5652b708da2c120$export$containsXY","$8ebfb36ef5532881c5652b708da2c120$export$containsExtent","extent1","extent2","$8ebfb36ef5532881c5652b708da2c120$export$coordinateRelationship","minX","minY","maxX","maxY","relationship","Infinity","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdate","opt_extent","$8ebfb36ef5532881c5652b708da2c120$export$createOrUpdateEmpty","$8ebfb36ef5532881c5652b708da2c120$export$equals","$8ebfb36ef5532881c5652b708da2c120$export$extendCoordinates","$8ebfb36ef5532881c5652b708da2c120$export$extendFlatCoordinates","flatCoordinates","offset","end","stride","$8ebfb36ef5532881c5652b708da2c120$export$extendXY","min","max","$8ebfb36ef5532881c5652b708da2c120$export$getBottomLeft","$8ebfb36ef5532881c5652b708da2c120$export$getBottomRight","$8ebfb36ef5532881c5652b708da2c120$export$getCenter","$8ebfb36ef5532881c5652b708da2c120$export$getForViewAndSize","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$8ebfb36ef5532881c5652b708da2c120$export$getHeight","$8ebfb36ef5532881c5652b708da2c120$export$getIntersection","intersection","$8ebfb36ef5532881c5652b708da2c120$export$intersects","$8ebfb36ef5532881c5652b708da2c120$export$getTopLeft","$8ebfb36ef5532881c5652b708da2c120$export$getTopRight","$8ebfb36ef5532881c5652b708da2c120$export$getWidth","$8ebfb36ef5532881c5652b708da2c120$export$isEmpty","$8ebfb36ef5532881c5652b708da2c120$export$applyTransform","transformFn","opt_stops","width","height","push","xs","ys","l","apply","$8ebfb36ef5532881c5652b708da2c120$var$_boundingExtentXYs","$916dab65013919ad0345478f9a9f4e0f$export$clamp","value","$916dab65013919ad0345478f9a9f4e0f$export$cosh","cosh","exp","$916dab65013919ad0345478f9a9f4e0f$export$log2","log2","log","LOG2E","$916dab65013919ad0345478f9a9f4e0f$export$squaredSegmentDistance","t","$916dab65013919ad0345478f9a9f4e0f$export$squaredDistance","$916dab65013919ad0345478f9a9f4e0f$export$toRadians","angleInDegrees","PI","$916dab65013919ad0345478f9a9f4e0f$export$modulo","r","$916dab65013919ad0345478f9a9f4e0f$export$lerp","$ddc7f5de3664aab559d1c545c366e59d$var$HEX_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$var$NAMED_COLOR_RE_","$ddc7f5de3664aab559d1c545c366e59d$export$asString","color","g","undefined","$ddc7f5de3664aab559d1c545c366e59d$export$toString","cache","cacheSize","$ddc7f5de3664aab559d1c545c366e59d$export$normalize","$80553d92e1fbcb82d752b6de833f9cf3$var$getKey","src","crossOrigin","$80553d92e1fbcb82d752b6de833f9cf3$export$shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","key","iconImage","hasListener","set","setSize","maxCacheSize","$003acff01e79c0a73122c747343d2e59$export$default","BaseEvent","type","propagationStopped","preventDefault","stopPropagation","$e1ac967f910869e98e549bfd20a1853c$export$assign","assign","var_sources","TypeError","output","arguments","$e1ac967f910869e98e549bfd20a1853c$export$clear","object","property","$e1ac967f910869e98e549bfd20a1853c$export$getValues","values","$99fe3f3343ef18166bd431edc467d890$var$__extends","__extends","$99fe3f3343ef18166bd431edc467d890$export$default","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","opt_type","keys","index","splice","$7961378a294a4943979a10a4df4a3fcf$export$listen","opt_this","opt_once","bind","originalListener_1","eventsKey","$7961378a294a4943979a10a4df4a3fcf$export$listenOnce","$7961378a294a4943979a10a4df4a3fcf$export$unlistenByKey","$02e80757fefec0a9636ae28d17c9fab2$var$__extends","$02e80757fefec0a9636ae28d17c9fab2$export$default","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","$02e80757fefec0a9636ae28d17c9fab2$export$unByKey","$a41f90da440d5a4a421775ee47a2c536$var$__extends","$a41f90da440d5a4a421775ee47a2c536$export$ObjectEvent","ObjectEvent","oldValue","$a41f90da440d5a4a421775ee47a2c536$export$default","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","hasProperties","notify","eventType","$a41f90da440d5a4a421775ee47a2c536$export$getChangeEventType","opt_silent","applyProperties","unset","$a41f90da440d5a4a421775ee47a2c536$var$changeEventTypeCache","$3a8294651627eb74246351f5b596cf68$var$__extends","$3a8294651627eb74246351f5b596cf68$export$default","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$1935b85c22cfc539ea58e141ab0b37d6$var$__extends","$1935b85c22cfc539ea58e141ab0b37d6$export$default","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","layerState","some","arrayLayerState","$c81aa09fb137106970dbc142b1e89ec3$export$default","createRenderer","hasRenderer","$1935b85c22cfc539ea58e141ab0b37d6$export$inView","viewState","zoom","$29884e9b826cd25109649ab0c360e769$export$equals","coordinate1","coordinate2","equals","$29884e9b826cd25109649ab0c360e769$export$rotate","cosAngle","sinAngle","$29884e9b826cd25109649ab0c360e769$export$wrapX","projection","canWrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$29884e9b826cd25109649ab0c360e769$export$getWorldsAway","$52488a0195cf0e38344877f5a3896831$var$__extends","$52488a0195cf0e38344877f5a3896831$export$default","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","slice","offsets","layerStates","numLayers","matches","tmpCoord","j","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$52488a0195cf0e38344877f5a3896831$var$expireIconCache","$1a95b8d63eeb9d5cd5e2742791ea7ab2$var$__extends","$1a95b8d63eeb9d5cd5e2742791ea7ab2$export$default","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_HIDDEN","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_CONTROL","$7ef0aa4943b3f1208e19af1336a3f8f6$export$CLASS_COLLAPSED","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegEx","RegExp","$7ef0aa4943b3f1208e19af1336a3f8f6$var$fontRegExMatchIndex","$7ef0aa4943b3f1208e19af1336a3f8f6$export$getFontParameters","fontSpec","match","style","lineHeight","weight","variant","families","family","$2016f251f21b02e27a5ca36c37510540$var$ua","navigator","userAgent","toLowerCase","$2016f251f21b02e27a5ca36c37510540$export$FIREFOX","$2016f251f21b02e27a5ca36c37510540$export$WEBKIT","$2016f251f21b02e27a5ca36c37510540$export$MAC","$2016f251f21b02e27a5ca36c37510540$export$DEVICE_PIXEL_RATIO","devicePixelRatio","$2016f251f21b02e27a5ca36c37510540$export$WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","$2016f251f21b02e27a5ca36c37510540$export$IMAGE_DECODE","Image","decode","$2016f251f21b02e27a5ca36c37510540$export$PASSIVE_EVENT_LISTENERS","passive","window","error","$8b566ca8fd3b2d9c184057ba73cbf345$export$createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","getContext","$8b566ca8fd3b2d9c184057ba73cbf345$export$replaceNode","newNode","oldNode","parent","parentNode","replaceChild","$8b566ca8fd3b2d9c184057ba73cbf345$export$removeNode","node","removeChild","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$checkedFonts","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$labelCache","console","warn","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureContext","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$textHeights","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$measureTextWidth","check","done","fonts","font","clearInterval","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$measureText","measureText","$d79b9b8aceb2a0d1337b4e6f69d78e46$export$rotateAtOffset","offsetX","offsetY","translate","rotate","$d79b9b8aceb2a0d1337b4e6f69d78e46$var$createTransformStringCanvas","$2ae21f590be041e7827bf48426c0766a$var$__extends","$2ae21f590be041e7827bf48426c0766a$export$default","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","position","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","event_1","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","appendChild","display","getDataAtPixel","$e6a59fbd122f687b33c2f382a3c7634b$var$__extends","$e6a59fbd122f687b33c2f382a3c7634b$var$Property","$e6a59fbd122f687b33c2f382a3c7634b$export$CollectionEvent","CollectionEvent","opt_element","opt_index","$e6a59fbd122f687b33c2f382a3c7634b$export$default","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d66bdf9af75d90254b022f9a4b768a43$var$__extends","$d66bdf9af75d90254b022f9a4b768a43$var$Property","$d66bdf9af75d90254b022f9a4b768a43$export$default","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$f8e1a00fe597e09d283a3697649a8ad5$var$__extends","$f8e1a00fe597e09d283a3697649a8ad5$export$default","MapEvent","$5185059e8a82c1ae03c4e1ba7159b318$var$__extends","$5185059e8a82c1ae03c4e1ba7159b318$export$default","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$75ed2fc91ec6cb8478583ef358a9dd4d$var$__extends","$75ed2fc91ec6cb8478583ef358a9dd4d$export$default","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$eeb9190850355aed8fc5d92349a26bc6$export$DROP","$eeb9190850355aed8fc5d92349a26bc6$export$default","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6bfe069e85349c527971d875462feeac$var$__extends","$6bfe069e85349c527971d875462feeac$export$default","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","hifi","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$6bfe069e85349c527971d875462feeac$export$getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$df0b68b08946bf3d8de6eeca4fba3a5f$export$default","$df0b68b08946bf3d8de6eeca4fba3a5f$export$METERS_PER_UNIT","$1514cc7c23ad291d61b727f0ef5e4246$export$default","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$7d5079714e2786ec6bee07910f0d8a86$var$__extends","$7d5079714e2786ec6bee07910f0d8a86$export$RADIUS","$7d5079714e2786ec6bee07910f0d8a86$export$HALF_SIZE","$7d5079714e2786ec6bee07910f0d8a86$export$EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$WORLD_EXTENT","$7d5079714e2786ec6bee07910f0d8a86$export$MAX_SAFE_Y","tan","$7d5079714e2786ec6bee07910f0d8a86$var$EPSG3857Projection","EPSG3857Projection","point","$7d5079714e2786ec6bee07910f0d8a86$export$PROJECTIONS","$7d5079714e2786ec6bee07910f0d8a86$export$fromEPSG4326","input","opt_output","opt_dimension","dimension","$7d5079714e2786ec6bee07910f0d8a86$export$toEPSG4326","atan","$655738a66489cc3574c072262645bff6$var$__extends","$655738a66489cc3574c072262645bff6$export$EXTENT","$655738a66489cc3574c072262645bff6$export$METERS_PER_UNIT","$655738a66489cc3574c072262645bff6$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$655738a66489cc3574c072262645bff6$export$PROJECTIONS","$0ba2913765cbb83278246e730dbcdcdf$var$cache","$6cb154572a1cc3d19ea74b1e9a3a7861$var$transforms","$6cb154572a1cc3d19ea74b1e9a3a7861$export$add","destination","sourceCode","destinationCode","$525020a649871896a05d6fe288616b91$export$DEFAULT_RADIUS","$525020a649871896a05d6fe288616b91$export$getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$524e9c84a4c58bd58490804da4c772c6$export$cloneTransform","$524e9c84a4c58bd58490804da4c772c6$export$identityTransform","$524e9c84a4c58bd58490804da4c772c6$export$addProjection","$524e9c84a4c58bd58490804da4c772c6$export$get","projectionLike","replace","$524e9c84a4c58bd58490804da4c772c6$export$getPointResolution","opt_units","pointResolution","getter","toEPSG4326_1","$524e9c84a4c58bd58490804da4c772c6$export$getTransformFromProjections","vertices","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentProjections","projections","$524e9c84a4c58bd58490804da4c772c6$export$addProjections","$524e9c84a4c58bd58490804da4c772c6$export$createProjection","defaultCode","$524e9c84a4c58bd58490804da4c772c6$export$equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$524e9c84a4c58bd58490804da4c772c6$export$getTransform","$524e9c84a4c58bd58490804da4c772c6$export$transform","$524e9c84a4c58bd58490804da4c772c6$export$transformExtent","projections2","forwardTransform","inverseTransform","$524e9c84a4c58bd58490804da4c772c6$var$userProjection","$524e9c84a4c58bd58490804da4c772c6$export$toUserCoordinate","$524e9c84a4c58bd58490804da4c772c6$export$fromUserCoordinate","destProjection","$524e9c84a4c58bd58490804da4c772c6$export$fromUserExtent","$61ba71c2b15c8b7e6577526180db0da5$export$createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$61ba71c2b15c8b7e6577526180db0da5$export$none","$75cf935c4655e9fc21b1ade56ed27175$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$75cf935c4655e9fc21b1ade56ed27175$var$getSmoothClampedResolution","$75cf935c4655e9fc21b1ade56ed27175$export$createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$4c6a822b604dbfa9a10722399f7335d0$export$disable","$4c6a822b604dbfa9a10722399f7335d0$export$none","$8717569d70d85bd7f28c8c1b2c37daee$export$easeOut","pow","$8717569d70d85bd7f28c8c1b2c37daee$export$easeIn","$8717569d70d85bd7f28c8c1b2c37daee$export$inAndOut","$8717569d70d85bd7f28c8c1b2c37daee$export$linear","$524e9c84a4c58bd58490804da4c772c6$export$addEquivalentTransforms","$3f4f29b0a4be88d8241f933ff6121a33$export$transform2D","opt_dest","dest","$a17c336463d573a615343832f6e09aa8$var$__extends","$a17c336463d573a615343832f6e09aa8$var$tmpTransform","$a17c336463d573a615343832f6e09aa8$export$default","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$57ce72c0539154dec2abdc81ffcff6df$var$__extends","$57ce72c0539154dec2abdc81ffcff6df$export$default","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$57ce72c0539154dec2abdc81ffcff6df$export$getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","$57ce72c0539154dec2abdc81ffcff6df$var$getLayoutForStride","anchorX","anchorY","k","$020a0553c73896bfe8e0cfb3e7ff136b$var$assignClosest","offset1","offset2","$020a0553c73896bfe8e0cfb3e7ff136b$export$maxSquaredDelta","squaredDelta","$020a0553c73896bfe8e0cfb3e7ff136b$export$assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$e477329667689b6619ea04e4a51dbccc$export$deflateCoordinates","$a357f0a07bdcadd773e93ca791a42f7b$export$douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$a357f0a07bdcadd773e93ca791a42f7b$export$snap","$a357f0a07bdcadd773e93ca791a42f7b$export$quantize","$c39683e7fcea5e9dae135d728d60cf52$export$inflateCoordinates","opt_coordinates","$7641779008ab07f3e708dabdbbb046eb$export$linearRing","twiceArea","$cf0a72c7dbf1c3cfa9edf65c24bc230b$var$__extends","$cf0a72c7dbf1c3cfa9edf65c24bc230b$export$default","LinearRing","maxDelta_","maxDeltaRevision_","getArea","$acd1b863667085614d305475fd6c1d27$var$__extends","$acd1b863667085614d305475fd6c1d27$export$default","Point","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsExtent","val","outside","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingContainsXY","wn","$7311a6a51d57e65f0d3a69bd7a380356$export$linearRingsContainsXY","ends","$32ab876027ca0904f46063bee68b73aa$export$intersectsLineString","coordinatesExtent","ret","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRingArray","$32ab876027ca0904f46063bee68b73aa$export$intersectsLinearRing","$221ffa684d4ba252080508824e602b78$export$coordinates","tmp","$52f5ef13e882c7db8132623a2b51ee49$export$linearRingIsClockwise","edge","$52f5ef13e882c7db8132623a2b51ee49$export$orientLinearRings","opt_right","right","isClockwise","$bffbcd35af658c4477627697774de1c2$var$__extends","$bffbcd35af658c4477627697774de1c2$export$default","Polygon","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","area","opt_coordinatess","coordinatess","jj","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","$bffbcd35af658c4477627697774de1c2$export$fromExtent","XY","$19fadbefe1b7e34cc76223b5c3e441cc$var$__extends","$19fadbefe1b7e34cc76223b5c3e441cc$export$default","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","constraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding","minZoom_","centerConstraint","smoothExtentConstraint","$19fadbefe1b7e34cc76223b5c3e441cc$export$createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","$19fadbefe1b7e34cc76223b5c3e441cc$export$createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$19fadbefe1b7e34cc76223b5c3e441cc$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$19fadbefe1b7e34cc76223b5c3e441cc$export$isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","getCenter","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$19fadbefe1b7e34cc76223b5c3e441cc$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","CIRCLE","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","CENTER","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","$b198bbb8a7fca092de94dd3a772c1343$var$__extends","$b198bbb8a7fca092de94dd3a772c1343$export$default","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$b198bbb8a7fca092de94dd3a772c1343$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","toString","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","INTERACTING","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","parseInt","$8316c877d328ebfc4f4b917229eec057$var$__extends","$8316c877d328ebfc4f4b917229eec057$export$default","Control","target_","listenerKeys","mapEvent","$194d017bd833b991c2c712fa2ff5b0e5$var$__extends","$194d017bd833b991c2c712fa2ff5b0e5$export$default","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$aef56543978371a8090d728a4f107ac0$var$__extends","$aef56543978371a8090d728a4f107ac0$export$default","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$9812beea87bdcda9027d52b89085c87c$var$__extends","$9812beea87bdcda9027d52b89085c87c$export$default","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$c10299a05f898a09c43f788b5b6dfdbd$export$defaults","zoomOptions","rotateOptions","attribution","attributionOptions","$1ad0cf5090e3852174414bfc8cc27b9e$var$__extends","$1ad0cf5090e3852174414bfc8cc27b9e$export$default","Interaction","setActive","active","$1ad0cf5090e3852174414bfc8cc27b9e$export$pan","$1ad0cf5090e3852174414bfc8cc27b9e$export$zoomByDelta","$4eeedd039b7e6d5b8277b175715f9541$var$__extends","$4eeedd039b7e6d5b8277b175715f9541$export$default","DoubleClickZoom","delta_","stopEvent","shiftKey","$0714aed143b912743afff175db44c1dc$var$__extends","$0714aed143b912743afff175db44c1dc$export$default","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$0714aed143b912743afff175db44c1dc$var$isPointerDraggingEvent","$0714aed143b912743afff175db44c1dc$export$centroid","$054715504eaffdc825d0a6ada99ec596$export$all","conditions","pass","$054715504eaffdc825d0a6ada99ec596$export$altShiftKeysOnly","altKey","metaKey","ctrlKey","$054715504eaffdc825d0a6ada99ec596$export$focusWithTabindex","hasAttribute","activeElement","$054715504eaffdc825d0a6ada99ec596$export$focus","$054715504eaffdc825d0a6ada99ec596$export$always","$054715504eaffdc825d0a6ada99ec596$export$mouseActionButton","$054715504eaffdc825d0a6ada99ec596$export$noModifierKeys","$054715504eaffdc825d0a6ada99ec596$export$shiftKeyOnly","$054715504eaffdc825d0a6ada99ec596$export$targetNotEditable","tagName","$054715504eaffdc825d0a6ada99ec596$export$mouseOnly","pointerType","$054715504eaffdc825d0a6ada99ec596$export$primaryAction","isPrimary","$959ec1b544453a9fa4f0e9221c3bb0b0$var$__extends","$959ec1b544453a9fa4f0e9221c3bb0b0$export$default","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","begin","distance","getDistance","getAngle","centerpx","$719e5208cd50905e41bacbcae2219883$var$__extends","$719e5208cd50905e41bacbcae2219883$export$default","DragRotate","lastAngle_","$d0055a036577a61fd8306330947568c7$var$__extends","$d0055a036577a61fd8306330947568c7$export$default","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","$275b26378704892d776581791f32dc0e$var$__extends","$275b26378704892d776581791f32dc0e$var$DragBoxEventType","$275b26378704892d776581791f32dc0e$export$DragBoxEvent","DragBoxEvent","$275b26378704892d776581791f32dc0e$export$default","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$b5cd6c68e27395a36aa4c8d3c5395250$var$__extends","$b5cd6c68e27395a36aa4c8d3c5395250$export$default","DragZoom","out_","out","mapExtent","boxPixelExtent","$bcd9d2d6fd38b8643ae7b7b6fd22a911$var$__extends","$bcd9d2d6fd38b8643ae7b7b6fd22a911$export$default","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","UP","mapUnitsDelta","$55ea853e77e2fe25fa1a8793cb31a3bf$var$__extends","$55ea853e77e2fe25fa1a8793cb31a3bf$export$default","KeyboardZoom","KEYPRESS","charCode","charCodeAt","$4f2c4d65e25c75c4fbc5129660f72747$export$default","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$f7a99b9e7b1a72242a3eb408b28d3563$var$__extends","$f7a99b9e7b1a72242a3eb408b28d3563$export$Mode","$f7a99b9e7b1a72242a3eb408b28d3563$export$default","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$74b3a0ab43d5d3c47ed1a15cedc99f6a$var$__extends","$74b3a0ab43d5d3c47ed1a15cedc99f6a$export$default","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$601b81cfcc535d77832cc96f04e942a1$var$__extends","$601b81cfcc535d77832cc96f04e942a1$export$default","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","$976448907138da16f7612e32ecc55ac7$var$__extends","$976448907138da16f7612e32ecc55ac7$export$default","Map","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$dffde8f1acde674bc74a24601c2788a7$export$DEFAULT_WMS_VERSION","$dffde8f1acde674bc74a24601c2788a7$export$IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","$e65a38a3837120ad833711b5930f5912$var$__extends","$e65a38a3837120ad833711b5930f5912$export$default","ImageBase","getImage","getPixelRatio","$7e4c33869bbc09ad771e58efcd7791e2$var$brokenDiagonalRendering_","$3a0ea260bd0161734cb5e603b9086c9d$export$default","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetCoverageX","targetQuadExtent","isFinite","isNotFinite","centerSrc","centerSrcEstimX","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$7e4c33869bbc09ad771e58efcd7791e2$var$drawTestTriangle","ctx","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","save","clip","fillRect","restore","$7e4c33869bbc09ad771e58efcd7791e2$var$verifyBrokenDiagonalRendering","$7e4c33869bbc09ad771e58efcd7791e2$export$calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$7e4c33869bbc09ad771e58efcd7791e2$export$render","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","image","drawImage","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","augmentedMatrix","fillStyle","getImageData","$7e4c33869bbc09ad771e58efcd7791e2$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$e27d29023845195edf41c541933e5848$var$__extends","$e27d29023845195edf41c541933e5848$export$default","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","sourceImage","IDLE","sourcePixelRatio","triangulation_","targetExtent_","sourceImage_","sourcePixelRatio_","contextOptions_","canvas_","sourceListenerKey_","unlistenSource_","reproject_","LOADED","$6a9611a0560ac769e67fadc6cfef9a2c$var$__extends","$6a9611a0560ac769e67fadc6cfef9a2c$export$default","Source","attributions_","$6a9611a0560ac769e67fadc6cfef9a2c$var$adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","getContextOptions","refresh","setAttributions","setState","attributionLike","$9f9942bd3646bc3a472cff9f79e5aa10$var$__extends","$9f9942bd3646bc3a472cff9f79e5aa10$export$ImageSourceEventType","$9f9942bd3646bc3a472cff9f79e5aa10$export$ImageSourceEvent","ImageSourceEvent","$9f9942bd3646bc3a472cff9f79e5aa10$export$default","ImageSource","reprojectedImage_","reprojectedRevision_","imageSmoothing","findNearestResolution","idx","getImageInternal","handleImageChange","$9f9942bd3646bc3a472cff9f79e5aa10$export$defaultImageLoadFunction","$2fc4e1887f4ffa14e16ea647fd21482c$var$__extends","$2fc4e1887f4ffa14e16ea647fd21482c$export$default","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","loadHandler","errorHandler","img","promise","listening_1","unlisten","then","catch","$2fc4e1887f4ffa14e16ea647fd21482c$export$listenImage","setImage","$c965b52f2e69fc1d4b0c393ef9deb65b$export$appendParams","uri","params","keyParams","encodeURIComponent","qs","$6aaca36e7c8fd08325e18f6fdd71a3e3$var$__extends","$6aaca36e7c8fd08325e18f6fdd71a3e3$var$GETFEATUREINFO_IMAGE_SIZE","$6aaca36e7c8fd08325e18f6fdd71a3e3$export$default","ImageWMS","crossOrigin_","url_","url","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","mpu","getParams","imageResolution","viewExtent","requestExtent","getImageLoadFunction","dpi","bbox","substr","getUrl","setImageLoadFunction","setUrl","updateParams","version","s1","s2","n1","n2","$3d27bea07c66fe1fc15ffd1548ea40c2$var$__extends","$3d27bea07c66fe1fc15ffd1548ea40c2$export$default","BaseImageLayer","$ae15ed96a99c1303ea67938747c94fca$var$__extends","$ae15ed96a99c1303ea67938747c94fca$export$default","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","imageState","$ac230d10056414a40eb774bd091234f1$var$__extends","$ac230d10056414a40eb774bd091234f1$export$default","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","newCanvas","newContext","clearRect","err","Uint8Array","$499eb9c8328aa11d5cbac56ecc1ff22b$var$__extends","$499eb9c8328aa11d5cbac56ecc1ff22b$export$default","CanvasImageLayerRenderer","imageLayer","viewResolution","imageSource","renderedExtent","imageExtent","imagePixelRatio","viewCenter","size_1","canvasTransform","clipped","dw","dh","previousAlpha","globalAlpha","$f43cb167c7c143462deaaf9c3488e22b$var$__extends","$f43cb167c7c143462deaaf9c3488e22b$export$default","ImageLayer","$fa8fdebac07669d2ee57fbf926837b94$var$orka","$fa8fdebac07669d2ee57fbf926837b94$var$attributionOrka","$fa8fdebac07669d2ee57fbf926837b94$var$map1"],"version":3,"file":"index.cc00b848.js.map"}